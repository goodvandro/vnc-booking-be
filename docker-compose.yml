services:
  db:
    image: postgres:16.0-alpine
    container_name: vnc-booking-db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - vnc-booking-data:/var/lib/postgresql/data
    ports:
      # Expõe a porta do DB para a sua máquina local (host)
      - "${DATABASE_PORT}:5432"
    networks:
      - vnc-booking-nt

  be:
    container_name: vnc-booking-be
    build:
      context: .
      dockerfile: Dockerfile
    image: vnc-booking-be
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: db # Nome do serviço do banco de dados
      DATABASE_PORT: 5432 # CORREÇÃO: Usar a porta interna do contêiner do Postgres
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
      ADMIN_PATH: ${ADMIN_PATH}
      PUBLIC_URL: ${PUBLIC_URL}
      STRAPI_ADMIN_BACKEND_URL: ${STRAPI_ADMIN_BACKEND_URL}

      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM: ${SMTP_FROM}
      SMTP_REPLY_TO: ${SMTP_REPLY_TO}
      ADMIN_EMAIL: ${SMTP_REPLY_TO}
    volumes:
      - ./:/opt/app
      - /opt/app/node_modules
      - uploads:/opt/app/public/uploads
    ports:
      - "${PORT}:1337"
    networks:
      - vnc-booking-nt
    depends_on:
      - db
    # Comando usando pnpm
    command: pnpm run develop

volumes:
  vnc-booking-data:
  uploads:

networks:
  vnc-booking-nt:
    driver: bridge
